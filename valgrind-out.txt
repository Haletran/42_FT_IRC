==407401== Memcheck, a memory error detector
==407401== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==407401== Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info
==407401== Command: ./ircserv 6666 testtest2
==407401== Parent PID: 407372
==407401== 
--407401-- 
--407401-- Valgrind options:
--407401--    --leak-check=full
--407401--    --show-leak-kinds=all
--407401--    --track-origins=yes
--407401--    --verbose
--407401--    --log-file=valgrind-out.txt
--407401-- Contents of /proc/version:
--407401--   Linux version 5.15.0-124-generic (buildd@lcy02-amd64-118) (gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #134-Ubuntu SMP Fri Sep 27 20:20:17 UTC 2024
--407401-- 
--407401-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--407401-- Page sizes: currently 4096, max supported 4096
--407401-- Valgrind library directory: /usr/libexec/valgrind
--407401-- Reading syms from /sgoinfre/goinfre/Perso/bapasqui/Core/42_ft_irc/ircserv
--407401-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--407401--   Considering /usr/lib/debug/.build-id/41/86944c50f8a32b47d74931e3f512b811813b64.debug ..
--407401--   .. build-id is valid
--407401-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--407401--    object doesn't have a symbol table
--407401--    object doesn't have a dynamic symbol table
--407401-- Scheduler: using generic scheduler lock implementation.
--407401-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==407401== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-407401-by-bapasqui-on-???
==407401== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-407401-by-bapasqui-on-???
==407401== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-407401-by-bapasqui-on-???
==407401== 
==407401== TO CONTROL THIS PROCESS USING vgdb (which you probably
==407401== don't want to do, unless you know exactly what you're doing,
==407401== or are doing some strange experiment):
==407401==   /usr/bin/vgdb --pid=407401 ...command...
==407401== 
==407401== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==407401==   /path/to/gdb ./ircserv
==407401== and then give GDB the following command
==407401==   target remote | /usr/bin/vgdb --pid=407401
==407401== --pid is optional if only one valgrind process is running
==407401== 
--407401-- REDIR: 0x402aa40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580bcec2 (???)
--407401-- REDIR: 0x402a810 (ld-linux-x86-64.so.2:index) redirected to 0x580bcedc (???)
--407401-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--407401--    object doesn't have a symbol table
--407401-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
--407401--    object doesn't have a symbol table
==407401== WARNING: new redirection conflicts with existing -- ignoring it
--407401--     old: 0x0402aa40 (strlen              ) R-> (0000.0) 0x580bcec2 ???
--407401--     new: 0x0402aa40 (strlen              ) R-> (2007.0) 0x0484ee30 strlen
--407401-- REDIR: 0x4027220 (ld-linux-x86-64.so.2:strcmp) redirected to 0x484fcd0 (strcmp)
--407401-- REDIR: 0x402afa0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4853840 (mempcpy)
--407401-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30
--407401--    object doesn't have a symbol table
--407401-- Reading syms from /usr/lib/x86_64-linux-gnu/libm.so.6
--407401--   Considering /usr/lib/debug/.build-id/a5/08ec5d8bf12fb7fd08204e0f87518e5cd0b102.debug ..
--407401--   .. build-id is valid
--407401-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--407401--    object doesn't have a symbol table
--407401-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--407401--   Considering /usr/lib/debug/.build-id/49/0fef8403240c91833978d494d39e537409b92e.debug ..
--407401--   .. build-id is valid
==407401== WARNING: new redirection conflicts with existing -- ignoring it
--407401--     old: 0x04c4fc60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--407401--     new: 0x04c4fc60 (memalign            ) R-> (1017.0) 0x0484e050 aligned_alloc
==407401== WARNING: new redirection conflicts with existing -- ignoring it
--407401--     old: 0x04c4fc60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--407401--     new: 0x04c4fc60 (memalign            ) R-> (1017.0) 0x0484e020 aligned_alloc
==407401== WARNING: new redirection conflicts with existing -- ignoring it
--407401--     old: 0x04c4fc60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--407401--     new: 0x04c4fc60 (memalign            ) R-> (1017.0) 0x0484e050 aligned_alloc
==407401== WARNING: new redirection conflicts with existing -- ignoring it
--407401--     old: 0x04c4fc60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--407401--     new: 0x04c4fc60 (memalign            ) R-> (1017.0) 0x0484e020 aligned_alloc
--407401-- REDIR: 0x4c52720 (libc.so.6:strnlen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c529e0 (libc.so.6:strpbrk) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c522e0 (libc.so.6:strcmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c70cd0 (libc.so.6:wcsnlen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c536d0 (libc.so.6:memset) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c6f540 (libc.so.6:wcslen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53c10 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c6f370 (libc.so.6:wcschr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c52260 (libc.so.6:index) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c52960 (libc.so.6:rindex) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c535a0 (libc.so.6:memmove) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
==407401== Preferring higher priority redirection:
--407401--     old: 0x04d4a7c0 (__memcpy_avx_unalign) R-> (2018.0) 0x04850f90 __memcpy_avx_unaligned_erms
--407401--     new: 0x04d4a7c0 (__memcpy_avx_unalign) R-> (2018.1) 0x04852880 memmove
--407401-- REDIR: 0x4c6f3f0 (libc.so.6:wcscmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c539e0 (libc.so.6:stpncpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c6f9b0 (libc.so.6:wmemchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c52830 (libc.so.6:strncmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53a70 (libc.so.6:strcasecmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c52420 (libc.so.6:strcspn) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c6f470 (libc.so.6:wcscpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c521d0 (libc.so.6:strcat) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53b60 (libc.so.6:strncasecmp_l) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53480 (libc.so.6:bcmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c5b570 (libc.so.6:memrchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c55010 (libc.so.6:strchrnul) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c52390 (libc.so.6:strcpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53b10 (libc.so.6:strcasecmp_l) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c526a0 (libc.so.6:strlen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c528d0 (libc.so.6:strncpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53950 (libc.so.6:stpcpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c533f0 (libc.so.6:memchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c52b00 (libc.so.6:strspn) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c537d0 (libc.so.6:mempcpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c53ac0 (libc.so.6:strncasecmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4c54f80 (libc.so.6:rawmemchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--407401-- REDIR: 0x4d47610 (libc.so.6:__strrchr_avx2) redirected to 0x484e810 (rindex)
--407401-- REDIR: 0x4c4f0a0 (libc.so.6:malloc) redirected to 0x4848820 (malloc)
--407401-- REDIR: 0x4d477e0 (libc.so.6:__strlen_avx2) redirected to 0x484ed10 (strlen)
--407401-- REDIR: 0x4d43a80 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x4852010 (bcmp)
--407401-- REDIR: 0x4d4a7c0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4852880 (memmove)
--407401-- REDIR: 0x4d4af80 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4852770 (memset)
--407401-- REDIR: 0x4925970 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4848fa0 (operator new(unsigned long))
--407401-- REDIR: 0x4d4a780 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4853440 (mempcpy)
--407401-- REDIR: 0x4923c10 (libstdc++.so.6:operator delete(void*)) redirected to 0x484b840 (operator delete(void*))
--407401-- REDIR: 0x4d47400 (libc.so.6:__strchrnul_avx2) redirected to 0x4853330 (strchrnul)
--407401-- REDIR: 0x4d432c0 (libc.so.6:__memchr_avx2) redirected to 0x484fd50 (memchr)
==407401== Invalid read of size 8
==407401==    at 0x4087B8: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_vector.h:1278)
==407401==    by 0x413643: Channel::addInvited(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Channel.cpp:112)
==407401==    by 0x40EF9D: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:76)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401==  Address 0xe8 is not stack'd, malloc'd or (recently) free'd
==407401== 
==407401== 
==407401== Process terminating with default action of signal 11 (SIGSEGV)
==407401==  Access not within mapped region at address 0xE8
==407401==    at 0x4087B8: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_vector.h:1278)
==407401==    by 0x413643: Channel::addInvited(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Channel.cpp:112)
==407401==    by 0x40EF9D: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:76)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401==  If you believe this happened as a result of a stack
==407401==  overflow in your program's main thread (unlikely but
==407401==  possible), you can try to increase the size of the
==407401==  main thread stack using the --main-stacksize= flag.
==407401==  The main thread stack size used in this run was 8388608.
==407401== 
==407401== HEAP SUMMARY:
==407401==     in use at exit: 74,541 bytes in 15 blocks
==407401==   total heap usage: 104 allocs, 89 frees, 78,885 bytes allocated
==407401== 
==407401== Searching for pointers to 15 not-freed blocks
==407401== Checked 151,576 bytes
==407401== 
==407401== 8 bytes in 1 blocks are still reachable in loss record 1 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x40C00F: std::__new_allocator<Client*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==407401==    by 0x40BFA0: __gnu_cxx::__alloc_traits<std::allocator<Client*>, Client*>::allocate(std::allocator<Client*>&, unsigned long) (alloc_traits.h:133)
==407401==    by 0x40BE3F: std::_Vector_base<Client*, std::allocator<Client*> >::_M_allocate(unsigned long) (stl_vector.h:378)
==407401==    by 0x40BA6B: std::vector<Client*, std::allocator<Client*> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<Client**, std::vector<Client*, std::allocator<Client*> > >, Client* const&) (vector.tcc:453)
==407401==    by 0x408BDC: std::vector<Client*, std::allocator<Client*> >::push_back(Client* const&) (stl_vector.h:1287)
==407401==    by 0x4071EE: Server::JoinChannel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:281)
==407401==    by 0x40EB09: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:66)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401== 
==407401== 8 bytes in 1 blocks are still reachable in loss record 2 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x40C00F: std::__new_allocator<Client*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==407401==    by 0x40BFA0: __gnu_cxx::__alloc_traits<std::allocator<Client*>, Client*>::allocate(std::allocator<Client*>&, unsigned long) (alloc_traits.h:133)
==407401==    by 0x40BE3F: std::_Vector_base<Client*, std::allocator<Client*> >::_M_allocate(unsigned long) (stl_vector.h:378)
==407401==    by 0x40BA6B: std::vector<Client*, std::allocator<Client*> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<Client**, std::vector<Client*, std::allocator<Client*> > >, Client* const&) (vector.tcc:453)
==407401==    by 0x408BDC: std::vector<Client*, std::allocator<Client*> >::push_back(Client* const&) (stl_vector.h:1287)
==407401==    by 0x4135FB: Channel::addOperators(Client*) (Channel.cpp:107)
==407401==    by 0x407203: Server::JoinChannel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:282)
==407401==    by 0x40EB09: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:66)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401== 
==407401== 16 bytes in 1 blocks are still reachable in loss record 3 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x40C00F: std::__new_allocator<Client*>::allocate(unsigned long, void const*) (new_allocator.h:137)
==407401==    by 0x40BFA0: __gnu_cxx::__alloc_traits<std::allocator<Client*>, Client*>::allocate(std::allocator<Client*>&, unsigned long) (alloc_traits.h:133)
==407401==    by 0x40BE3F: std::_Vector_base<Client*, std::allocator<Client*> >::_M_allocate(unsigned long) (stl_vector.h:378)
==407401==    by 0x40BA6B: std::vector<Client*, std::allocator<Client*> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<Client**, std::vector<Client*, std::allocator<Client*> > >, Client* const&) (vector.tcc:453)
==407401==    by 0x408BDC: std::vector<Client*, std::allocator<Client*> >::push_back(Client* const&) (stl_vector.h:1287)
==407401==    by 0x404D95: Server::AcceptClient() (Server.cpp:199)
==407401==    by 0x404B26: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:105)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 23 bytes in 1 blocks are still reachable in loss record 4 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x49C6109: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x40E6E1: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 24 bytes in 1 blocks are still reachable in loss record 5 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x49C6289: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x40523D: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 24 bytes in 1 blocks are still reachable in loss record 6 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x49BB230: std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Ios_Openmode) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x4129D0: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:198)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 31 bytes in 1 blocks are still reachable in loss record 7 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x49C30BD: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x49C425D: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x41305E: Channel::Channel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Channel.cpp:16)
==407401==    by 0x40718D: Server::JoinChannel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:280)
==407401==    by 0x40EB09: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:66)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 31 bytes in 1 blocks are still reachable in loss record 8 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x49C30BD: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x49C4B4F: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x493F609: std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x4129FE: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:200)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 32 bytes in 1 blocks are still reachable in loss record 9 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x40AB8F: std::__new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:137)
==407401==    by 0x40AB20: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==407401==    by 0x40A93F: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:378)
==407401==    by 0x40A56B: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:453)
==407401==    by 0x40876C: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1287)
==407401==    by 0x404CFA: Server::AcceptClient() (Server.cpp:195)
==407401==    by 0x404B26: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:105)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 64 bytes in 1 blocks are still reachable in loss record 10 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x40CF6F: std::__new_allocator<std::_Rb_tree_node<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::allocate(unsigned long, void const*) (new_allocator.h:137)
==407401==    by 0x40CF00: __gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >, std::_Rb_tree_node<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >&, unsigned long) (alloc_traits.h:133)
==407401==    by 0x40CDE1: std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_M_get_node() (stl_tree.h:563)
==407401==    by 0x40CD9C: std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_M_create_node(std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > const&) (stl_tree.h:585)
==407401==    by 0x40CD6F: std::_Rb_tree_node<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >* std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_Alloc_node::operator()<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >(std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > const&) const (stl_tree.h:531)
==407401==    by 0x40CA26: std::_Rb_tree_iterator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_M_insert_<std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > const&, std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_Alloc_node&) (stl_tree.h:1832)
==407401==    by 0x40C5C0: std::_Rb_tree_iterator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_M_insert_unique_<std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > const&, std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_Alloc_node&) (stl_tree.h:2285)
==407401==    by 0x40C501: std::_Rb_tree<Channel*, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > >, std::_Select1st<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > const&) (stl_tree.h:1148)
==407401==    by 0x40C2A9: std::map<Channel*, std::vector<Client*, std::allocator<Client*> >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::insert(std::_Rb_tree_iterator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > >, std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > const&) (stl_map.h:912)
==407401==    by 0x408DDC: std::map<Channel*, std::vector<Client*, std::allocator<Client*> >, std::less<Channel*>, std::allocator<std::pair<Channel* const, std::vector<Client*, std::allocator<Client*> > > > >::operator[](Channel* const&) (stl_map.h:515)
==407401==    by 0x4071CF: Server::JoinChannel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:281)
==407401== 
==407401== 224 bytes in 2 blocks are still reachable in loss record 11 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x404BC3: Server::AcceptClient() (Server.cpp:179)
==407401==    by 0x404B26: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:105)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 328 bytes in 1 blocks are still reachable in loss record 12 of 14
==407401==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x40713E: Server::JoinChannel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:280)
==407401==    by 0x40EB09: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:66)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401== 
==407401== 1,024 bytes in 1 blocks are still reachable in loss record 13 of 14
==407401==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x4C28BA3: _IO_file_doallocate (filedoalloc.c:101)
==407401==    by 0x4C37CDF: _IO_doallocbuf (genops.c:347)
==407401==    by 0x4C36F5F: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:744)
==407401==    by 0x4C356D4: _IO_new_file_xsputn (fileops.c:1243)
==407401==    by 0x4C356D4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==407401==    by 0x4C29FD6: fwrite (iofwrite.c:39)
==407401==    by 0x49B3B64: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x49B3EBA: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x403904: main (main.cpp:11)
==407401== 
==407401== 72,704 bytes in 1 blocks are still reachable in loss record 14 of 14
==407401==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==407401==    by 0x4921939: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==407401==    by 0x400647D: call_init.part.0 (dl-init.c:70)
==407401==    by 0x4006567: call_init (dl-init.c:33)
==407401==    by 0x4006567: _dl_init (dl-init.c:117)
==407401==    by 0x40202C9: ??? (in /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2)
==407401==    by 0x2: ???
==407401==    by 0x1FFF0001BE: ???
==407401==    by 0x1FFF0001C8: ???
==407401==    by 0x1FFF0001CD: ???
==407401== 
==407401== LEAK SUMMARY:
==407401==    definitely lost: 0 bytes in 0 blocks
==407401==    indirectly lost: 0 bytes in 0 blocks
==407401==      possibly lost: 0 bytes in 0 blocks
==407401==    still reachable: 74,541 bytes in 15 blocks
==407401==         suppressed: 0 bytes in 0 blocks
==407401== 
==407401== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==407401== 
==407401== 1 errors in context 1 of 1:
==407401== Invalid read of size 8
==407401==    at 0x4087B8: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_vector.h:1278)
==407401==    by 0x413643: Channel::addInvited(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Channel.cpp:112)
==407401==    by 0x40EF9D: Server::executeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Client*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Message.cpp:76)
==407401==    by 0x40E715: Server::ProcedeCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:56)
==407401==    by 0x412A5A: Server::ProcedeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Client*) (Message.cpp:201)
==407401==    by 0x40527A: Server::ReceiveNewData(int) (Server.cpp:228)
==407401==    by 0x404B50: Server::ServerInit(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:107)
==407401==    by 0x4039BF: main (main.cpp:16)
==407401==  Address 0xe8 is not stack'd, malloc'd or (recently) free'd
==407401== 
==407401== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
